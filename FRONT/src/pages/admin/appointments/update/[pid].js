import NavAdmin from '@/components/NavAdmin'
import MenuUsers from '@/components/MenuUsers';
import Head from 'next/head'
import Link from 'next/link'
import { useEffect, useState } from 'react';
import Axios from 'axios';
import { useRouter } from 'next/router';
export default function UpdateAppointment() {
    const API_URL = "http://localhost:8080/api/appointment/";

    const [appointment, setAppointment] = useState({
        id: "",
        comments: "",
        specialty: "",
        date: "",
        student: "",
        professional: "",
    });

    const router = useRouter();
    const { pid } = router.query;

    const [message, setMessage] = useState({ message: "", status: "" });
    const [errors, setErrors] = useState({});
    
    useEffect(() => {
        const getAppointment = async () => {
            if (!pid) return;
            try {
                const response = await Axios.get(API_URL + pid);
                setAppointment(response.data.foundedAppointment);
            } catch (error) {
                console.error("Erro ao buscar os agendamentos:", error);
                setMessage({ message: "Erro ao buscar os agendamentos!", status: "error" });
            }
        };
        getAppointment();
    }, [pid]);

    const handleChange = (e) => {
        const { name, value } = e.target;
        setAppointment((prevAppointment) => ({
            ...prevAppointment,
            [name]: value,
        }));
    };

    const handleUpdateAppointment = async () => {
        try {
            if (!pid) return;
            const response = await Axios.put(API_URL + pid, appointment);
            
            if (response.status === 200) {
                setMessage({ message: "Agendamento salvo com sucesso!", status: "ok" });
                router.push('/admin/appointments/');
            }

            setMessage({ message: response.data.message, status: "ok" });
        } catch (error) {
            console.error("Erro ao alterar o Agendamento:", error);
            setMessage({ message: "Erro ao alterar o Agendamento!", status: "error" });
        }
    };

    function formatDateTimeForInput(isoDate) {
        return isoDate; 
    }

    return (
        <>
            <Head>
                <title>APP-BC</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
            </Head>
            <div>
                <NavAdmin />
                <MenuUsers />
            </div>

            <div className="container">
                {message.status === "ok" && (
                    <div className="alert alert-success alert-dismissible fade show" role="alert">{message.message}</div>)}
                {message.status === "error" && (
                    <div className="alert alert-danger alert-dismissible fade show" role="alert">{message.message}</div>)}
            </div>

            <div className="d-flex justify-content-center p-2">
        <div className="container">
            <div className="row border-bottom fw-bold">
                <h3 className="text-center fw-bold"> EDITAR AGENDAMENTO </h3>
                    <form method="POST">
                            <div className="form-group">
                                <label className="form-label mt-2 mb-0" htmlFor="student">Estudante</label>
                                <input type="text" id="student" name="student" className="form-control" value={appointment.student} onChange={handleChange} />
                            </div>
                            <div className="form-group">
                                <label className="form-label mt-2 mb-0" htmlFor="professional">Profissional</label>
                                <input type="text" id="professional" name="professional" className="form-control" value={appointment.professional} onChange={handleChange} />
                            </div>
                            <div className="form-group">
                                <label className="form-label mt-2 mb-0" htmlFor="specialty">Especialidade</label>
                                <input type="text" id="specialty" name="specialty" className="form-control" value={appointment.specialty} onChange={handleChange}/>
                            </div>
                            <div className="form-group">
                                <label className="form-label mt-2 mb-0" htmlFor="date">Data</label>
                                <input type="datetime-local" id="date" name="date" className="form-control" value={formatDateTimeForInput(appointment.date)} onChange={handleChange} />
                            </div>
                            <div className="form-group">
                                <label className="form-label mt-2 mb-0" htmlFor="comments">Coment√°rios</label>
                                <input type="text" id="comments" name="comments" className="form-control" value={appointment.comments} readOnly/>
                            </div>
                            <div className="form-group p-2">
                                <button className="btn btn-success fw-bold mx-1" type="button" onClick={handleUpdateAppointment}>SALVAR</button>
                                <Link className="btn btn-secondary fw-bold mx-1" href="/admin/appointments">VOLTAR</Link>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </>
    );
}
