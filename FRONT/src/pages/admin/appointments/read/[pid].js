import NavAdmin from '@/components/NavAdmin'
import MenuUsers from '@/components/MenuUsers';
import Head from 'next/head'
import Link from 'next/link'
import { useEffect, useState } from 'react';
import Axios from 'axios';
import { useRouter } from 'next/router';

export default function readAppointment() {
  
  const API_URL = "http://localhost:8080/api/appointment/"

  const [appointment, setAppointment] = useState({
    id: "",
    comments: "",
    specialty: "",
    date: "",
    student: "",
    professional: "",
    //create_date: ""
  });

  const [message, setMensage] = useState({ message:"", status:""});

  const router = useRouter();
  const [pid] = useState(router.query.pid);


     useEffect(() => {
        const getAppointment = async () => {
          try {
            const response = await Axios.get(API_URL + pid);
            setMensage( { message: response.data.message , status: "ok"} ); 
            setAppointment( response.data.foundedAppointment );
          } catch (error) {
            console.error('Erro ao buscar os agendamentos:', error);
            setMensage( { message: "Erro ao buscar os Agendamentos!", status: "error"} );
          }
        };
    
        getAppointment();
    
      }, []);

      function formatDateTimeForInput(isoDate) {
        
        return isoDate;
    }

  return (
    <>
      <Head>
        <title>APP-BC</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <div>
        <NavAdmin />
        <MenuUsers />
        { 
          message.status==="" ? "" : 
          message.status==="ok" ? "" : 
          <div className='alert alert-danger' role='alert'> { message.message } <Link className='alert-link' href='/admin/appointments'>Voltar</Link></div>
          //<div className='alert alert-success' role='alert'> { message.message } <Link className='alert-link' href='/admin/users'>Voltar</Link></div>
        }
      </div>
  
      <div className="d-flex justify-content-center p-2">
        <div className="container">
            <div className="row border-bottom fw-bold">
                <h3 className="text-center fw-bold"> DETALHES DO AGENDAMENTO </h3>
                <form>
                <div className="form-group">
                    <label className="form-label mt-2 mb-0" htmlFor="student">Estudante</label>
                    <input type="text" id="student" name="student" className="form-control" value={appointment.student} readOnly />
                </div>
                <div className="form-group">
                    <label className="form-label mt-2 mb-0" htmlFor="professional">Profissional</label>
                    <input type="text" id="professional" name="professional" className="form-control" value={appointment.professional} readOnly />
                </div>
                <div className="form-group">
                    <label className="form-label mt-2 mb-0" htmlFor="specialty">Especialidade</label>
                    <input type="text" id="specialty" name="specialty" className="form-control" value={appointment.specialty} readOnly/>
                </div>
                <div className="form-group">
                    <label className="form-label mt-2 mb-0" htmlFor="date">Data</label>
                    <input type="datetime-local" id="date" name="date" className="form-control" value={formatDateTimeForInput(appointment.date)} readOnly />
                </div>
                <div className="form-group">
                    <label className="form-label mt-2 mb-0" htmlFor="comments">Comentários</label>
                    <input type="text" id="comments" name="comments" className="form-control" value={appointment.comments} readOnly/>
                </div>
                {/*<div className="form-group">
                    <label className="form-label mt-2 mb-0" htmlFor="create_date">Data de Criação</label>
                    <input type="text" id="create_date" name="create_date" className="form-control" value={ appointment.create_date } readOnly/>
                </div>*/}
                <div className="form-group p-2">
                    {/* <button className="btn btn-outline-success" type="button" onClick={handleCreateAppointment} >Salvar</button> */}
                    <Link className="btn btn-secondary fw-bold" href="/admin/appointments">VOLTAR</Link>
                </div>
                </form>
            </div>
        </div>
      </div>  
  </>
  )
}


