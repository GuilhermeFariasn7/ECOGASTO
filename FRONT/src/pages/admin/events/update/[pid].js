import NavAdmin from '@/components/NavAdmin'
import MenuUsers from '@/components/MenuUsers';
import Head from 'next/head'
import Link from 'next/link'
import { useEffect, useState } from 'react';
import Axios from 'axios';
import { useRouter } from 'next/router';

export default function updateEvent() {
  
  const API_URL = "http://localhost:8080/api/event/"

  const [event, setEvent] = useState({
    id: "",
    name: "",
    description: "",
    comments: "",
    date: "",
    //create_date: ""
  });

  const router = useRouter();
  const { pid } = router.query;

  const [message, setMensage] = useState({ message:"", status:""});


  useEffect(() => {
    const getEvent = async () => {
      if (!pid) return; 
      try {
        const response = await Axios.get(API_URL + pid);
        setMensage({ message: "Evento encontrado", status: "ok" });
        setEvent(response.data.foundedEvent);
      } catch (error) {
        console.error("Erro ao buscar os eventos:", error);
        setMensage({ message: "Erro ao buscar os eventos!", status: "error" });
      }
    };
    
        getEvent();
    
      }, [pid]);
      
      const handleChange = (e) => {
        const { name, value } = e.target;
        setEvent((prevEvent) => ({
          ...prevEvent,
          [name]: value,
        }));
      };

      const handleUpdateEvent = async () => {
        try {
          if (!pid) return;
          const response = await Axios.put(API_URL + pid, event);
          setMensage({ message: "Evento editado com sucesso!", status: "ok" });
        } catch (error) {
          console.error("Erro ao alterar o Evento:", error);
          setMensage({ message: "Erro ao alterar o Evento!", status: "error" });
        }
      };

      function formatDateTimeForInput(isoDate) {
        
        return isoDate;
    }

  return (
    <>
      <Head>
        <title>APP-BC</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <div>
        <NavAdmin />
        <MenuUsers />
        { 
          message.status==="" ? "" : 
          message.status==="ok" ? <div className='alert alert-success' role='alert'> { message.message } <Link className='alert-link' href='/admin/events'>Voltar</Link></div> : 
          <div className='alert alert-danger' role='alert'> { message.message } <Link className='alert-link' href='/admin/events'>Voltar</Link></div>
        }
      </div>
  
      <div className="d-flex justify-content-center p-2">
        <div className="container">
            <div className="row border-bottom fw-bold">
                <h3 className="text-center fw-bold"> EDITAR EVENTO </h3>
            
                <form method="POST">
                <div className="form-group">
                    <label className="form-label mt-2 mb-0" htmlFor="name">Nome</label>
                    <input type="text" id="name" name="name" className="form-control" value={event.name} onChange={handleChange}/>
                </div>
                <div className="form-group">
                    <label className="form-label mt-2 mb-0" htmlFor="description">Descrição</label>
                    <input type="text" id="description" name="description" className="form-control" value={event.description} onChange={handleChange} />
                </div>
                <div className="form-group">
                    <label className="form-label mt-2 mb-0" htmlFor="comments">Comentários</label>
                    <input type="text" id="comments" name="comments" className="form-control" value={event.comments} onChange={handleChange} />
                </div>
                <div className="form-group">
                    <label className="form-label mt-2 mb-0" htmlFor="date">Data</label>
                    <input type="datetime-local" id="date" name="date" className="form-control" value={formatDateTimeForInput(event.date)} onChange={handleChange} />
                </div>
                {/*<div className="form-group">
                    <label className="form-label mt-2 mb-0" htmlFor="create_date">Data de Criação</label>
                    <input type="text" id="create_date" name="create_date" className="form-control" value={ event.create_date } readOnly/>
                </div>*/}
                <div className="form-group p-2">
                    <button className="btn btn-success fw-bold mx-1" type="button" onClick={handleUpdateEvent} >SALVAR</button>
                    <Link className="btn btn-secondary fw-bold mx-1" href="/admin/events">VOLTAR</Link>
                </div>
                </form>
            </div>
        </div>
      </div>  
  </>
  )
}


